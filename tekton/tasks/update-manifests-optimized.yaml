apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: update-manifests-optimized
spec:
  description: Update manifests (optimized for course environment)
  params:
    - name: manifest-path
      type: string
    - name: namespace
      type: string
    - name: image-tag
      type: string
    - name: git-repo-url
      type: string
  workspaces:
    - name: source
  steps:
  - name: wait-for-build
    image: bitnami/kubectl:latest
    script: |
      #!/bin/bash
      set -euo pipefail
      
      if [ ! -w /home ]; then
        export HOME=/tmp
        mkdir -p /tmp/.docker || true
      fi
      echo "⏳ Waiting for Shipwright BuildRun to complete..."
      
      BUILD_RUN_NAME=$(kubectl get buildrun -n $(params.namespace) --sort-by=.metadata.creationTimestamp -o jsonpath='{.items[-1].metadata.name}')
      echo "📋 Monitoring BuildRun: $BUILD_RUN_NAME"
      
      kubectl wait --for=condition=Succeeded buildrun/${BUILD_RUN_NAME} -n $(params.namespace) --timeout=10m
      echo "✅ Shipwright BuildRun completed successfully"
      
      echo "🔍 Verifying image was pushed..."
      sleep 5
      
  - name: retag-and-update
    image: bitnami/kubectl:latest
    workingDir: $(workspaces.source.path)
    env:
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: git-credentials
            key: token
      - name: HOME
        value: /tmp
    script: |
      #!/bin/bash
      set -euo pipefail
      
      mkdir -p /tmp/.docker || true
      
      COMMIT_SHA="$(params.image-tag)"
      NAMESPACE="$(params.namespace)"
      SOURCE_IMAGE="image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/java-webapp:latest"
      TARGET_IMAGE="image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/java-webapp:${COMMIT_SHA}"
      
      echo "🔍 Checking if source image exists: ${SOURCE_IMAGE}"
      if ! oc get istag java-webapp:latest -n ${NAMESPACE} &>/dev/null; then
        echo "❌ Source image java-webapp:latest not found in ${NAMESPACE}"
        echo "   This usually means the Shipwright build hasn't completed successfully."
        echo "   Please check the BuildRun status and logs."
        exit 1
      fi
      
      echo "✅ Source image found, proceeding with retag"
      echo "🏷️  Retagging image: latest → ${COMMIT_SHA}"
      oc tag ${SOURCE_IMAGE} ${TARGET_IMAGE}
      
      echo "📝 Updating $(params.manifest-path) with new image tag"
      yq e ".spec.template.spec.containers[0].image = \"${TARGET_IMAGE}\"" -i "$(params.manifest-path)"
      
      echo "✅ Updated deployment manifest:"
      yq e '.spec.template.spec.containers[0].image' "$(params.manifest-path)"
      
      echo "📤 Committing and pushing changes"
      git config --global user.name "Tekton Pipeline"
      git config --global user.email "tekton@bootcamp.local"
      
      git add "$(params.manifest-path)"
      
      if git diff --staged --quiet; then
        echo "ℹ️  No changes to commit - manifest already up to date"
      else
        echo "📝 Committing changes..."
        git commit -m "Update image tag to ${COMMIT_SHA}"
        
        echo "🚀 Pushing to branch ${NAMESPACE}..."
        REPO_URL="$(params.git-repo-url)"
        REPO_WITH_TOKEN=$(echo $REPO_URL | sed "s|https://|https://$GITHUB_TOKEN@|")
        
        git push $REPO_WITH_TOKEN HEAD:${NAMESPACE}
        echo "✅ Successfully pushed changes to trigger ArgoCD sync!"
        echo "🎯 ArgoCD will now detect the change and deploy image: ${TARGET_IMAGE}"
      fi