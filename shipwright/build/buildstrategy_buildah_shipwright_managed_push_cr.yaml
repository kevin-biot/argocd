apiVersion: shipwright.io/v1beta1
kind: ClusterBuildStrategy
metadata:
  name: buildah-shipwright-managed-push
spec:
  parameters:
    - name: dockerfile
      description: Dockerfile path
      default: Dockerfile
      type: string
    - name: storage-driver
      description: Storage driver (vfs/overlay)
      default: vfs
      type: string
    - name: shp-source-context
      description: The absolute path to the context directory (injected by Shipwright)
      type: string
    - name: shp-output-image
      description: The URL of the image to push (injected by Shipwright)
      type: string
  buildSteps:
    - name: build-and-push
      image: quay.io/containers/buildah:v1.39.3
      workingDir: /workspace/source
      securityContext:
        privileged: true
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -e
          
          # Use Shipwright v1beta1 system parameters
          SOURCE_CONTEXT="$(params.shp-source-context)"
          OUTPUT_IMAGE="$(params.shp-output-image)"
          
          echo "üèóÔ∏è  Building image from context: ${SOURCE_CONTEXT}"
          echo "üì¶  Output image: ${OUTPUT_IMAGE}"
          
          # Change to the source context directory
          cd "${SOURCE_CONTEXT}"
          
          # Verify Dockerfile exists
          if [ ! -f "$(params.dockerfile)" ]; then
            echo "‚ùå Dockerfile not found: $(params.dockerfile)"
            exit 1
          fi
          
          echo "üî® Building image..."
          buildah --storage-driver=$(params.storage-driver) bud \
            -f $(params.dockerfile) \
            -t "${OUTPUT_IMAGE}" \
            .
          
          echo "üöÄ Pushing image..."
          buildah --storage-driver=$(params.storage-driver) push \
            "${OUTPUT_IMAGE}" \
            "docker://${OUTPUT_IMAGE}"
          
          echo "‚úÖ Build and push completed successfully"
